// <auto-generated />
using System;
using Firma.Intranet.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Firma.Intranet.Migrations
{
    [DbContext(typeof(FirmaIntranetContext))]
    [Migration("20250425160416_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Firma.Intranet.Models.CMS.Strona", b =>
                {
                    b.Property<int>("IdStrony")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStrony"));

                    b.Property<string>("LinkTytul")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Pozycja")
                        .HasColumnType("int");

                    b.Property<string>("Tresc")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Tytul")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdStrony");

                    b.ToTable("Strona");
                });

            modelBuilder.Entity("Firma.Intranet.Models.CMS.WiadomoscKontaktowa", b =>
                {
                    b.Property<int>("IdWiadomosciKontaktowej")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdWiadomosciKontaktowej"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uwagi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdWiadomosciKontaktowej");

                    b.ToTable("WiadomoscKontaktowa");
                });

            modelBuilder.Entity("Firma.Intranet.Models.Intranet.Pracownik", b =>
                {
                    b.Property<int>("IdPracownika")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPracownika"));

                    b.Property<string>("FotoURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stanowisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPracownika");

                    b.ToTable("Pracownik");
                });

            modelBuilder.Entity("Firma.Intranet.Models.Intranet.Urlopy", b =>
                {
                    b.Property<int>("IdUrlopu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUrlopu"));

                    b.Property<DateTime>("DataDo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataOd")
                        .HasColumnType("datetime2");

                    b.Property<string>("FotoURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdPracownika")
                        .HasColumnType("int");

                    b.HasKey("IdUrlopu");

                    b.HasIndex("IdPracownika");

                    b.ToTable("Urlopy");
                });

            modelBuilder.Entity("Firma.Intranet.Models.Menu.Danie", b =>
                {
                    b.Property<int>("IdDania")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDania"));

                    b.Property<decimal>("Cena")
                        .HasColumnType("money");

                    b.Property<string>("FotoURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdKategorii")
                        .HasColumnType("int");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDania");

                    b.HasIndex("IdKategorii");

                    b.ToTable("Danie");
                });

            modelBuilder.Entity("Firma.Intranet.Models.Menu.Kategoria", b =>
                {
                    b.Property<int>("IdKategorii")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdKategorii"));

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdKategorii");

                    b.ToTable("Kategoria");
                });

            modelBuilder.Entity("Firma.Intranet.Models.Zamowienia.MetodaPlatnosci", b =>
                {
                    b.Property<int>("IdMetodyPlatnosci")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMetodyPlatnosci"));

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMetodyPlatnosci");

                    b.ToTable("MetodaPlatnosci");
                });

            modelBuilder.Entity("Firma.Intranet.Models.Zamowienia.Zamowienie", b =>
                {
                    b.Property<int>("IdZamowienia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdZamowienia"));

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdDania")
                        .HasColumnType("int");

                    b.Property<int>("IdMetodyPlatnosci")
                        .HasColumnType("int");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uwagi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdZamowienia");

                    b.HasIndex("IdDania");

                    b.HasIndex("IdMetodyPlatnosci");

                    b.ToTable("Zamowienie");
                });

            modelBuilder.Entity("Firma.Intranet.Models.Intranet.Urlopy", b =>
                {
                    b.HasOne("Firma.Intranet.Models.Intranet.Pracownik", "Pracownik")
                        .WithMany("Urlop")
                        .HasForeignKey("IdPracownika")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pracownik");
                });

            modelBuilder.Entity("Firma.Intranet.Models.Menu.Danie", b =>
                {
                    b.HasOne("Firma.Intranet.Models.Menu.Kategoria", "Kategoria")
                        .WithMany("Dania")
                        .HasForeignKey("IdKategorii")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategoria");
                });

            modelBuilder.Entity("Firma.Intranet.Models.Zamowienia.Zamowienie", b =>
                {
                    b.HasOne("Firma.Intranet.Models.Menu.Danie", "Danie")
                        .WithMany("Zamowienia")
                        .HasForeignKey("IdDania")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Firma.Intranet.Models.Zamowienia.MetodaPlatnosci", "MetodaPlatnosci")
                        .WithMany("Zamowienia")
                        .HasForeignKey("IdMetodyPlatnosci")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Danie");

                    b.Navigation("MetodaPlatnosci");
                });

            modelBuilder.Entity("Firma.Intranet.Models.Intranet.Pracownik", b =>
                {
                    b.Navigation("Urlop");
                });

            modelBuilder.Entity("Firma.Intranet.Models.Menu.Danie", b =>
                {
                    b.Navigation("Zamowienia");
                });

            modelBuilder.Entity("Firma.Intranet.Models.Menu.Kategoria", b =>
                {
                    b.Navigation("Dania");
                });

            modelBuilder.Entity("Firma.Intranet.Models.Zamowienia.MetodaPlatnosci", b =>
                {
                    b.Navigation("Zamowienia");
                });
#pragma warning restore 612, 618
        }
    }
}
